{\rtf0\ansi{\fonttbl\f4\fswiss Helvetica;\f3\fmodern Courier;\f1\fnil FixedGothicBBBCourier;}
\paperw16820
\paperh11480
\margl120
\margr120
\pard\tx740\f4\b\i0\ulnone\fs36\fc0\cf0 How to Use NXChat\

\b0\fs24 \

\b\fs32 Preparation\

\b0\fs24 \
To use OpenAI's API, you need a paid API key.\
Please register as a user on OpenAI¡Çs website, providing your credit card information and other required details.\
You can find various guides online that explain how to obtain an API key and go through the registration process.\
\
Next, to run the server, you need a software environment capable of running Python.\
The server is a relatively simple Python script available at the GitHub repository:\
\
https://github.com/y-hayakawa/nxchat/tree/main/server\
\
After downloading the script (tcp_llm_broadcast_server.py), open it in a text editor and modify the following section near the beginning:\
\

\f3 	ALLOWED_IPS = \{\
	'127.0.0.1', # Localhost\
	'192.168.1.2',\
	\}\

\f4 \
Change the IP addresses to match the machine where the NEXTSTEP client is running.\
\
If you need to enter long prompts in your program (e.g., code), you may also want to adjust this setting:\
\

\f3 	MAX_PROMPT_LENGTH = 2000\

\f4 \

\b\fs32 Starting the Server\

\b0\fs24 \
After setting the OpenAI API key as an environment variable in your system, you can run the script.\
\
For Linux or macOS, open a terminal and run:\
\

\f3 	$ export OPENAI_API_KEY="xxxxxxxxxxxxxxxxx"\
	$ python3 tcp_llm_broadcast_server.py\

\f4 \
If you see errors about missing modules like openai, please install them using pip or a similar tool.\
\
On Windows, when setting the environment variable via Command Prompt or in a batch file, do not use quotation marks:\
\

\f3 	set OPENAI_API_KEY=xxx-xx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\

\f4 \
If everything starts correctly, you should see the following message:\
\

\f3 	Serving on ('0.0.0.0', 12345)\

\f4 \

\b\fs32 Using the Client\

\b0\fs24 \
Copy the downloaded files from the repository to your NEXTSTEP environment (by some means), open the NXChat directory, and build the project.\
This will generate the NEXTSTEP application: NXChat.app.\
\
When building in a Japanese-language environment:\
\
Open ProjectBuilder, click the "Attributes" button, and set "Language" to "Japanese".\
\
Click the "Files" button and open the support files:\

\f3 \
	Makefile\
	Makefile.preamble\

\f4 \
Then confirm that the language settings near the top look like this:\
\

\f3 	LANGUAGE = Japanese\
	JAPANESE = YES\
	ENGLISH = NO\

\f4 \
If they don¡Çt, edit them accordingly. Building in English mode may cause Japanese text to become garbled.\
\
If you're reading this help file, you've probably already completed the above steps...\
\
Before you begin using the client:\
\
- You need to set the server address (and port number).\
- Open the "Preferences" from the "Info" menu, set the IP address of the server, then quit the application once.\
\
The settings will be applied the next time you launch the app.\
\
Using the client is very simple:\
- Enter your prompt in the bottom text area and press the "Send" button.\
After a short wait, the response from ChatGPT will appear.\
- You can also send the prompt by pressing Command + Return.\
- The prompt input field uses Emacs-style key bindings.\
\

\b\fs28 Chat History Commands\

\b0\fs24 \
The conversation history with ChatGPT is saved on the server¡Çs database and can be controlled using special prompts:\
\

\f3 /recall all\

\f4 	Retrieves the entire chat history\
\

\f3 /recall 5\

\f4 	Retrieves the last 5 exchanges\
\

\f3 /reset\

\f4 	Clears the chat history (the server¡Çs database will be backed up)\
\

\f3 /system <prompt>\

\f4 	Sets a system prompt\
\

\b\fs28 Technical Notes\

\b0\fs24 \
Communication with OpenAI is done in UTF-8, while Japanese NEXTSTEP uses EUC-JP. NXChat performs character encoding conversion internally. Characters not representable in EUC-JP are replaced with spaces.\
\
Responses from OpenAI may be returned in Markdown format. NXChat attempts to convert these to RTF for display in NEXTSTEP, but this process is somewhat ad-hoc, and rendering issues may occur.\
\
NXChat simply sends text to the server and asynchronously receives and displays the server¡Çs response. Therefore, with minimal modifications, the server could be adapted to access services other than OpenAI.\
\

}
