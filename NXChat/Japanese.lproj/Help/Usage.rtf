{\rtf0\ansi{\fonttbl\f0\fnil GothicBBBHelvetica;\f3\fmodern Courier;\f1\fnil FixedGothicBBBCourier;}
\paperw19140
\paperh16900
\margl120
\margr120
\pard\tx1120\tx2240\tx3360\tx4480\tx5600\tx6720\tx7840\tx8960\tx10080\tx11200\f0\b\i0\ulnone\fs36\fc0\cf0 NXChatの使い方\

\b0\fs24 \

\b\fs32 1. 準備\

\b0\fs24 \
OpenAIのAPIを利用するためのAPIキー(有償)が必要です。\
OpenAIのサイトで、クレジットカード情報などと共に、ユーザー登録してください。\
APIキーの入手方法や具体的な手順は、オンラインでさまざまな情報が入手できます。\
\
次に、サーバーを動作させるため、Pythonが動作するソフトウェア環境が必要です。\
サーバーのソフトは、比較的単純なPythonのスクリプトで、\
GitHubのリポジトリ\
\

\f3 https://github.com/y-hayakawa/nxchat/tree/main/server\

\f0 \
からダウンロードできます。\
\
スクリプト(tcp_llm_broadcast_server.py)をダウンロードしたら、エディタで開いて、冒頭付近の\
\

\f3 ALLOWED_IPS = \{\
    '127.0.0.1',  # Localhost\
    '192.168.1.2',\
\}\

\f0 \
の箇所のIPアドレスを、クライアント(NEXTSTEP)が動作しているマシンのものに変更しておいて下さい。\
\
プログラムのコードのように、長いプロンプト入力が必要な場合は、\
\

\f3 MAX_PROMPT_LENGTH = 2000\

\f0 \
の箇所も適宜調整ください。\
\

\b\fs32 2. サーバーの起動\

\b0\fs24 \
お使いの環境で、OpenAIのAPIキーを環境変数に設定した後似、スクリプトを走らせてください。\
LinuxやmacOSでは、ターミナルから\
\

\f3 $ export OPENAI_API_KEY="xxxxxxxxxxxxxxxxx"\
$ python3 tcp_llm_broadcast_server.py\

\f0 \
のように起動すればよいはずです。openaiなどの必要なモジュールがインストールされていないとエラーが出ますので、適宜、pipコマンドなどを使って追加インストールしてください。\
\
Windowsのコマンドプロンプトやバッチファイルで環境変数を設定する場合は、クォーテーションで囲まないで、\
\

\f3 set OPENAI_API_KEY=xxx-xx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\

\f0 \
のように設定してください。\
\
正常に起動されると\

\f3 Serving on ('0.0.0.0', 12345)\

\f0 と表示されます。\
\

\b\fs36 3. クライアントの使用法\

\b0\fs24 \
リポジトリからダウンロードしたファイルを(何らかの方法で)NEXTSTEPにコピーし、NXChatディレクトリを開いてプロジェクトをビルドすると、NEXTSTEPのアプリケーション  NXChat.app が生成されます。\
\
日本語環境でビルドする場合は、プロジェクトビルダーを開いて、\
「属性」ボタンを押して、「言語」をJapaneseに\
「ファイル」ボタンを押して、「サポートファイル」の中の\

\f3         Makefile\
        Maklefiel.preamble\

\f0 の冒頭付近の言語関係の設定が\

\f3         LANGUAGE = Japanese\
        JAPANESE=YES\
        ENGLISH=NO\

\f0 のようになっているか確認(こうなっていなければ適宜修正)してください。英語設定でビルドすると、日本語が文字化けします。\
\
もっとも、このヘルプを御覧になっているということは、すでに上記はクリアされているということですね・・・\
\
最初に、サーバーのアドレス(とポート番号)を設定しておく必要があります。\
「案内」メニューの「プリファレンス」を開き、サーバー側のIPアドレスを設定後、一旦アプリケーションを終了してください。\
次に起動した際に、設定が反映されるようになっています。\
\
その後の使い方は至って単純で、下側の区画にプロンプトを入力し「送信」ボタンを押して少し待っていると、ChatGPTからの応答が表示されます。\
 ボタンを押す代わりに Command + Return でも送信できます。 なお、プロンプト入力欄は、Emacs的なキーバインドになっています。\
\
CharGPTとのやりとりは、サーバー側のデータベースに保存されるようになっており、以下のようなプロンプト入力により操作することができます：\
\

\f3 /recall all\

\f0 	これまでの履歴を全て読みだす\

\f3 /recall 5\

\f0 	5回前までの履歴を全て読みだす\

\f3 /reset\

\f0  	履歴を消去する（サーバー上のデータベースはバックアップされる）\

\f3 /system
\f0  プロンプト
\f3 \

\f0 	システムプロンプトを設定する\
\
細かい技術的な事項\
・OpenAIとのやり取りはutf-8で行われますが、NEXTSTEP(日本版)はEUC-JPなので、NXChat内部でコード変換を行っています。 EUC-JPに含まれない文字は、単純に空白に置き換えられます。\
・OpenAIからのテキストはMarkdown形式で送られてくる場合があります。 NXChatはそれをNEXTSTEPのRTFに変換して表示するようにしていますが、かなりいい加減なやり方のため、表示が乱れる場合があるかもしれません。\
・NXChatはサーバーにテキストを送信し、サーバーからのテキストを非同期的に受信して表示しているだけなので、サーバーを少し修正するだけで、 OpenAI以外のサービスにもアクセスできるようになるはずです。\
\

}
